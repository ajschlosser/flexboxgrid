/**
* Adapted by Aaron John Schlosser from flexboxgrid.css by Kristofer Joseph
* The original CSS was removed and replaced with SASS
*/

@import "./variables";

$container-sm: $sm-min + $gutter-width;
$container-md: $md-min + $gutter-width;
$container-lg: $lg-min + $gutter-width;

$sm-viewport: "only screen and (min-width: #{$sm-min}em)";
$md-viewport: "only screen and (min-width: #{$md-min}em)";
$lg-viewport: "only screen and (min-width: #{$lg-min}em)";

$flex-multiplier: ((100 / $columns) * 1%);


.container,
.container-fluid {
  margin-left: auto;
  margin-right: auto;
}

.container-fluid {
  padding-left: var($outer-margin, 2rem);
  padding-right: var($outer-margin, 2rem);
}

@mixin flex($grow, $shrink, $basis: auto) {
  -ms-flex: $grow $shrink $basis;
  -webkit-box-flex: $grow;
  -webkit-flex: $grow $shrink $basis;
  flex: $grow $shrink $basis;
}

@mixin flex-grow($grow) {
  -ms-flex-positive: $grow;
  -webkit-flex-grow: $grow;
  flex-grow: $grow;
}

@mixin flex-basis($basis) {
  -ms-flex-preferred-size: $basis;
  -webkit-flex-basis: $basis;
  flex-basis: $basis;
}

@mixin flex-direction($direction) {
  -ms-flex-direction: $direction;
  -webkit-flex-direction: $direction;
  flex-direction: $direction;
}

@mixin flex-wrap($wrap) {
  -ms-flex-wrap: $wrap;
  -webkit-flex-wrap: $wrap;
  flex-wrap: $wrap;
}

@mixin box($orient, $direction) {
  -webkit-box-direction: $direction;
  -webkit-box-orient: $orient;
}

@mixin display-flex {
  // sass-lint:disable no-duplicate-properties
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin justify($justify) {
  -ms-flex-pack: $justify;
  -webkit-box-pack: $justify;
  -webkit-justify-content: flex- + $justify;
  justify-content: $justify;
  text-align: start;
}

@mixin align($align) {
  -ms-flex-align: $align;
  -webkit-align-items: if($align == "center", center, flex- + $align);
  -webkit-box-align: $align;
  align-items: if($align == "center", center, flex- + $align);
}

@mixin around {
  -ms-flex-pack: distribute;
  -webkit-justify-content: space-around;
  justify-content: space-around;
}

@mixin between {
  -ms-flex-pack: justify;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}

@mixin order($order) {
  @if $order >= 0 {
    $order: 1;
  } @else if $order < 0 {
    $order: -1;
  }
  -ms-flex-order: $order;
  -webkit-box-ordinal-group: if($order == -1, 0, 2);
  -webkit-order: $order;
  order: $order;
}

@mixin col {
  @include flex(0, 0);
  box-sizing: border-box;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

@mixin container($size) {
  @if $size == "sm" {
    width: $container-sm;
  } @else if $size == "md" {
    width: $container-md;
  } @else if $size == "lg" {
    width: $container-lg;
  }
}

@mixin media($size) {
  @if $size == "xs" {
    @content;
  } @else if $size == "sm" {
    @media #{$sm-viewport} {
      @content;
    }
  } @else if $size == "md" {
    @media #{$md-viewport} {
      @content;
    }
  } @else if $size == "lg" {
    @media #{$lg-viewport} {
      @content;
    }
  }
}

.row {
  @include display-flex;
  @include flex(0, 1);
  @include box(horizontal, normal);
  @include flex-direction(row);
  @include flex-wrap(wrap);
  box-sizing: border-box;
  margin-left: -0.5rem;
  margin-right: -0.5rem;

  .reverse {
    @include box(horizontal, reverse);
    @include flex-direction(row-reverse);
  }
}

.col {
  .reverse {
    @include box(vertical, reverse);
    @include flex-direction(column-reverse);
  }
}

[class^="col-xs-"],
[class*=" col-xs-"],
[class^="col-sm-"],
[class*=" col-sm-"],
[class^="col-md-"],
[class*=" col-md-"],
[class^="col-lg-"],
[class*=" col-lg-"] {
  @include col;
  @include flex-grow(1);
  @include flex-basis(0);
  -webkit-box-flex: 1;
  max-width: 100%;
}

@each $size in xs, sm, md, lg {
  @include media($size) {
    .container {
      @include container($size);
    }

    @for $i from 1 through 12 {
      .col-#{$size}-#{$i} {
        @include flex-basis($flex-multiplier * $i);
        max-width: $flex-multiplier * $i;
      }
    }

    @for $i from 1 through 12 {
      .col-#{$size}-offset-#{$i} {
        margin-left: $flex-multiplier * $i;
      }
    }

    .start-#{$size} {
      @include justify(start);
    }

    .center-#{$size} {
      @include justify(center);
    }

    .end-#{$size} {
      @include justify(end);
    }

    .top-#{$size} {
      @include align(start);
    }

    .middle-#{$size} {
      @include align(center);
    }

    .bottom-#{$size} {
      @include align(end);
    }

    .around-#{$size} {
      @include around;
    }

    .between-#{$size} {
      @include between
    }

    .first-#{$size} {
      @include order(-1);
    }

    .last-#{$size} {
      @include order(1);
    }

    .invisible-#{$size} {
      display: none;
      visibility: hidden;
    }

    .visible-#{$size} {
      display: block;
      visibility: visible;
    }
  }
}
